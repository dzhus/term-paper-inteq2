% -*- mode: noweb; noweb-code-mode: octave-mode -*-

\section{Предмет работы}
\label{sec:problem}
В настоящей курсовой работе рассматриваются методы решения
симметричного неоднородного интегрального уравнения Фредгольма первого
рода вида
\begin{equation}
  \label{eq:ieqgen}
  \intl_a^b {e^{-s\tau}x(\tau)\,d\tau} = z(s),\, s\in [a;b]
\end{equation}

Изучение интегрального уравнения будем проводить по следующему плану:
<<*>>=
<<исходные данные>>
<<модельное решение>>
<<дискретизация>>
<<неустойчивость>>
<<регуляризация>>
<<запись результатов>>
@ 

\subsection{Исходные данные}

Рассматривается отрезок интегрирования $a = 0, b = 2$.
<<исходные данные>>=
a = 0
b = 2
@ 

К использованию предлагается модельное решение
(\figref{fig:model-sol}) вида
\begin{equation}
  \label{eq:model-sol}
  x_0(\tau) = 100 \mul \sin^2\left(\frac{\pi}{2}\tau\right).
\end{equation}
<<модельное решение>>=
function M = M(x)
  M = 100 * sin(pi / 2 * x) .^ 2;
endfunction
@ 

\begin{figure}[!h]
  \centering
  \begin{tikzpicture}
    \begin{axis}[
      xtick={-1, 0, 1},
      ytick = {0, 100},
      color=black]
      \addplot plot[mark=*,smooth,domain=-1:1,samples=20] function{100*sin(pi/2*(x-1))**2};
    \end{axis}
  \end{tikzpicture}
  \caption{Модельное решение \eqref{eq:model-sol}}
  \label{fig:model-sol}
\end{figure}

\section{Решение}

\subsection{Приближение полиномами Чебышёва}

Многочлены Чебышёва $(T_k(\tau)$ на отрезке $[a;b]$ определяются следующим образом:
\begin{equation}
  \begin{aligned}
    T_0(\tau) &= 1\\
    T_1(\tau) &= \frac{2x-(b+a)}{b-a}\\
    T_{k+1}(\tau) &= 2 \mul T_1(\tau) \mul T_k(\tau) - T_{k-1}(\tau)\\
  \end{aligned}
\end{equation}

Разложим искомую функцию $x(\tau)$ по многочленам Чебышёва до $n$-го
члена:
\begin{equation}
  \label{eq:cheb-sum}
  x_A(\tau) = \sum_{k=1}^n{c_k T_k(\tau)}.
\end{equation}

Коэффициенты $c_k$ вычисляются по формуле:
\begin{equation}
  \label{eq:cheb-coeffs}
  c_k = \frac{\scalmult{T_k, x}}{\scalmult{T_k, T_k}},
\end{equation}
где
\begin{equation}
  \scalmult{f, g} = \sum_{m=1}^n{f(\tau_m)\mul g(\tau_m)}.
\end{equation}

При этом известно (см. \cite{bahvalov01}, \cite{amosov94}), что для
интерполяции с наименьшей погрешностью на отрезке $[a;b]$ узлы $\tau_m$
необходимо выбирать следующим образом:
\begin{equation}
  \label{eq:cheb-roots}
  \tau_m = \frac{a+b}{2} +
  \frac{b-a}{2}\mul\cos\left(\frac{\pi(2m-1)}{2n}\right),\quad m = 1,\dotsc,n.
\end{equation}

При выборе узлов интерполяции как в \eqref{eq:cheb-roots},
\begin{equation}
  \label{eq:cheb-norm}
  \scalmult{T_k, T_k} = r_k =
  \begin{cases}
    n,&k = 1,\\
    n/2,&k>1.
  \end{cases}
\end{equation}

С учётом \eqref{eq:cheb-coeffs} и \eqref{eq:cheb-norm} формула
\eqref{eq:cheb-sum} примет вид:
\begin{equation}
  \label{eq:cheb-interpol}
  x_A(\tau) = \sum_{k=1}^n \left[
    \frac{\sum_{j=1}^n 
      x(\tau_j)\mul T_k(\tau_j)}{r_k}
    \mul T_k(\tau)
  \right]
\end{equation}

\subsection{Дискретизация исходного уравнения}
<<дискретизация>>=
<<генерация сеток>>
<<построение матриц $\Psi, \Theta$ и $B$>>
<<построение правой части>>
@ 

Введём на $[a; b]$ равномерную сетку $S_n = \langle a = s_1, \dotsc,
s_n = b \rangle$ и сетку $\langle \tau_1, \dotsc, \tau_n \rangle$ согласно
\eqref{eq:cheb-roots}. Выберем $n=20$.
<<генерация сеток>>=
global n = 20
h = (b - a) / (n - 1)
s = a:h:b;
tau = Cheb_roots(a, b, n);
@ 

Подставим разложение \eqref{eq:cheb-interpol} в
\eqref{eq:ieqgen} и запишем уравнение для каждого $s_i$:
\begin{equation}
  \label{eq:psi-matrix}
  \intl_a^b
  e^{-s_i\tau}
  \sum_{k=1}^n\sum_{j=1}^n \left[
    x(\tau_j)\mul T_k(\tau_j) \mul \frac{1}{r_k} \mul T_k(\tau)
  \right]\,d\tau = 
  z(s_i).
\end{equation}

Переупорядочим знаки суммирования и интегрирования:
\begin{equation}
  \label{eq:psi-theta}
  \sum_{j=1}^n
    \sum_{k=1}^n \underbrace{
      \intl_a^b e^{-s_i\tau}\mul T_k(\tau)\,d\tau}_{\psi_{ik}}
    \mul \underbrace{\vphantom{\intl_a^b} T_k(\tau_j) \mul \frac{1}{r_k}}_{\theta_{kj}}
  \mul x(\tau_j) = z(s_i),
\end{equation}
с учётом введённых обозначений:
\begin{equation}
  \label{eq:b-coeff}
  \sum_{j=1}^n{ 
    \underbrace{\sum_{k=1}^n \psi_{ik} \mul \theta_{kj}}_{b_{ij}} \mul
    x(\tau_j)} = z(s_i).
\end{equation}

Определим матрицы $\Psi = (\psi_{ik})_n^n$ и $\Theta =
(\theta_{kj})_n^n$, после чего можно ввести матрицу 
\begin{equation}
  \label{eq:b-matrix}
  B = (b_{ij})_n^n = \Psi\mul\Theta.
\end{equation}
<<построение матриц $\Psi, \Theta$ и $B$>>=
Psi = zeros(n);
for i = 1:n
  for k = 1:n
    Psi(i, k) = quad(@(x) exp(-s(i) * x) * Cheb(a, b, k, x), a, b);
  endfor
endfor

Theta = zeros(n);
for k = 1:n
  for j = 1:n
    Theta(k, j) = Cheb(a, b, k, tau(j)) / Cheb_norm(k, n);
  endfor
endfor

global B = Psi * Theta
@

Из \eqref{eq:b-coeff} следует:
\begin{equation*}
  \sum_{j=1}^nb_{ij}x(\tau_j) = z(s_i),
\end{equation*}
что с учётом определения \eqref{eq:b-matrix} принимает вид:
\begin{equation}
  \label{eq:discrete}
  B\mul\vec{x}=\vec{z}.
\end{equation}

Решение системы \eqref{eq:discrete} позволяет определить значения
искомой функции $x$ в точках $\tau_m$.

Найдём правую часть, подставив в уравнение модельное решение.
<<построение правой части>>=
global x_m = M(tau)';
z = B * x_m;
@ 


\subsection{Неустойчивость}

Внесём в правую часть уравнения малое возмущение порядка
$\delta=10^{-2}$, прибавив к ней вектор нормально распределённых
случайных величин, и рассмотрим вместо \eqref{eq:discrete} полученную
систему:
\begin{equation}
  \label{eq:discrete-dist}
  B\mul\vec{x}=\vec{\tilde{z}}.
\end{equation}

Решение данной системы $\vec{\tilde{x}}$ (\figref{fig:raw-dist})
демонстрирует её неусточивость к малым возмущениям.

\begin{figure}[htb]
  \centering
  \begin{tikzpicture}
    \begin{axis}
      \input{raw-dist-sol-plot.tex}
    \end{axis}
  \end{tikzpicture}
  \caption{Решение \eqref{eq:discrete} после внесения возмущения}
  \label{fig:raw-dist}
\end{figure}

<<неустойчивость>>=
raw_x = B \ z;
global delta = 0.01;
rand ("seed", 1329)
global z_d = z + normrnd(0, delta, n, 1);
z_d - z
x_d = B \ z_d;
@

\subsection{Регуляризация}

Метод регуляризации заключается в замене исходной системы
\eqref{eq:discrete-dist} на следующую:
\begin{equation}
\label{eq:discrete-reg}
\left(\alpha H + B^TB \right) \mul \vec{x} = B^T\mul \vec{\tilde{z}},
\end{equation}
где $H$ — матрица стабилизирующего функционала, а $\alpha$ — параметр
регуляризации. Предлагается определить $\alpha$ таким образом, чтобы
новая система была как можно адекватнее исходной и при этом была
устойчивой. Далее рассмотрим два метода регуляризации.

<<регуляризация>>=
function x = stabilized_solution(B, z, H, alpha)
  x = (H * alpha + B' * B) \ (B' * z);
endfunction
<<регуляризация по модельному решению>>
<<регуляризация по невязке>>
@ 

\subsubsection{Использование модельного решения}

Обозначая решение новой системы как $\vec{\bar{x}}(\alpha)$, зададимся
задачей минимизации функционала
\begin{equation}
  w(\alpha) = \norm{\vec{x_0} - \vec{\bar{x}}(\alpha)}.
\end{equation}

\begin{figure}[htb]
  \centering
  \begin{tikzpicture}
    \begin{axis}
      \input{w-plot.tex}
    \end{axis}
  \end{tikzpicture}
  \caption{Значения функционала $w(\alpha)$}
\end{figure}

<<регуляризация по модельному решению>>=
function w = w(alpha)
  global B z_d x_m n
  x = stabilized_solution(B, z_d, eye(n), alpha);
  w = sum(abs(x - x_m));
endfunction

alphas = 1e-8:20e-8:5e-6;
w_points = zeros(length(alphas),1);
for i=1:length(alphas)
  w_points(i) = w(alphas(i));
endfor

alpha = sqp(1e-2, @w, [], [], 0, 1)
<<проверка первого решения на устойчивость>>
@

Находя $\alpha$: \input{alpha-val.out}, вычислим решение
регуляризованной системы \eqref{eq:discrete-reg}. Оно сопоставлено с
модельным решением $x_0$ на \figref{fig:r1}.

\begin{figure}[htb]
  \centering
  \begin{tikzpicture}
    \begin{axis}
      \input{model-plot.tex}
      \input{r1-sol-plot.tex}
    \end{axis}
  \end{tikzpicture}
  \caption{Модельное и регуляризационное решение}
  \label{fig:r1}
\end{figure}

Система \eqref{eq:discrete-reg} при найденном значении $\alpha$
обладает устойчивостью: как продемонстрировано на
\figref{fig:r1-dist}, добавление к вектору $\vec{\tilde{z}}$ малого
возмущение уже не приводит к картине, виденной ранее
(\figref{fig:raw-dist}).

\begin{figure}[htb]
  \centering
  \begin{tikzpicture}
    \begin{axis}
      \input{r1-sol-plot.tex}
      \input{r1-sol-dist-plot.tex}
    \end{axis}
  \end{tikzpicture}
  \caption{Стабильность регуляризационного решения $\vec{\bar{x}}(\alpha)$}
  \label{fig:r1-dist}
\end{figure}

<<проверка первого решения на устойчивость>>=
x_r1 = stabilized_solution(B, z_d, eye(n), alpha);
x_r1_dist = stabilized_solution(B, z_d + normrnd(0, delta, n, 1), eye(n), alpha);
@ 

\subsubsection{Регуляризация по невязке}
Рассмотрим для той же системы \eqref{eq:discrete-reg} невязку в правой
части:
\begin{equation}
  \label{eq:residual}
  \Delta = \norm{B\mul\vec{\bar{x}}(\beta) - \vec{\tilde{z}}},
\end{equation}
минимизируем функционал $\Phi(\beta)$, определённый следующим образом:
\begin{equation}
  u(\beta) = \abs{\Delta - \delta\mul\sqrt{n}}.
\end{equation}
В данном случае мы выбираем параметр регуляризации таким образом,
чтобы значение невязки \eqref{eq:residual} было как можно ближе к
оптимальному значению $\delta\sqrt{n}$, вычисленному с учётом
нормальности распределения компонента внесённого в систему вектора
случайных величин. Определим $\beta$: \input{beta-val.out}.

\begin{figure}[htb]
  \centering
  \begin{tikzpicture}
    \begin{axis}
      \input{u-plot.tex}
    \end{axis}
  \end{tikzpicture}
  \caption{Значения функционала $u(\beta)$}
\end{figure}

<<регуляризация по невязке>>=
function u = u(alpha)
  global B z_d x_m n delta
  x = stabilized_solution(B, z_d, eye(n), alpha);
  u = abs(sum(abs(B*x - z_d)) - delta * sqrt(n));
endfunction

u_points = zeros(length(alphas),1);
for i=1:length(alphas)
  u_points(i) = u(alphas(i));
endfor

beta = sqp(1e-2, @u, [], [], alpha / 10, 1)
<<проверка второго решения на устойчивость>>
@

\begin{figure}[htb]
  \centering
  \begin{tikzpicture}
    \begin{axis}
      \input{r2-sol-plot.tex}
      \input{r2-sol-dist-plot.tex}
    \end{axis}
  \end{tikzpicture}
  \caption{Стабильность регуляризационного решения $\vec{\bar{x}}(\beta)$}
  \label{fig:r2-dist}
\end{figure}

<<проверка второго решения на устойчивость>>=
x_r2 = stabilized_solution(B, z_d, eye(n), beta);
x_r2_dist = stabilized_solution(B, z_d + normrnd(0, delta, n, 1), eye(n), beta);
@ 

\subsection{Выводы}

Решения $\vec{\bar{x}}(\alpha)$ и $\vec{\bar{x}}(\beta)$ представлены
на \figref{fig:r1-r2}.

\begin{figure}[htb]
  \centering
  \begin{tikzpicture}
    \begin{axis}
      \input{r1-sol-plot.tex}
      \input{r2-sol-plot.tex}
    \end{axis}
  \end{tikzpicture}
  \caption{Сравнение регуляризационных решений}
  \label{fig:r1-r2}
\end{figure}

Поскольку в действительности модельное решение не всегда доступно,
более универсальным является метод регуляризации по невязке, дающий
приемлимые результаты.

<<запись результатов>>=
model_points = [tau; x_m']';
x_points = [tau; raw_x']';
x_d_points = [tau; x_d']';
x_r1 = [tau; x_r1']';
x_r1_dist = [tau; x_r1_dist']';
x_r2 = [tau; x_r2']';
x_r2_dist = [tau; x_r2_dist']';

w_points = [alphas; w_points']';
u_points = [alphas; u_points']';
save ("model.out", "model_points");
save ("raw-sol.out", "x_points");
save ("raw-dist-sol.out", "x_d_points");
save ("r1-sol.out", "x_r1");
save ("r1-sol-dist.out", "x_r1_dist");
save ("r2-sol.out", "x_r2");
save ("r2-sol-dist.out", "x_r2_dist");
save ("w.out", "w_points");
save ("u.out", "u_points");
save ("-ascii", "alpha.out", "alpha");
save ("-ascii", "beta.out", "beta");
@ 
